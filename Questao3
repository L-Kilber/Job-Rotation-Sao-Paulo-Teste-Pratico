import json

with open("dados.json") as data_jason:
    d
    = json.load(data_jason)

faturamento_mes = []
maior_valor_faturamento = 0
menor_valor_faturamento = 0
faturamento_total = 0
faturamento_medio = 0
dias_maior_faturamento_medio = 0

for i in data:
    faturamento_mes.append(i["valor"])
    faturamento_mes.sort()

maior_valor_faturamento = faturamento_mes[-1]

for i in faturamento_mes:
    faturamento_total += i
    if menor_valor_faturamento == 0:
        if i > 0:
            menor_valor_faturamento = i
            continue

faturamento_medio = faturamento_total/len(faturamento_mes)

for i in faturamento_mes:
    if i > faturamento_medio:
        dias_maior_faturamento_medio += 1


print(f"O menor valor faturado no mês foi: R${menor_valor_faturamento}")
print(f"O maior valor faturado no mês foi: R${maior_valor_faturamento}")
print(f"O faturamento total no mês foi: R${faturamento_total}")
print(f"O faturamento médio no mês foi: R${faturamento_medio}")
print(f"O faturamento diário superou o médio em {dias_maior_faturamento_medio} dias")





### Para trabalhar com arquivos JSON é necessário a importação da biblioteca.
### O arquivo então é carregado dentro da variável DATA.
### São iniciadas variáveis para armazenar o resultado das operações.
### O primeiro laço for carrega na lista faturamento_mes os valores contidos dentro do arquivo JSON
### O comando faturamento_mes.sort() ordena a lista em ordem crescente, facilitando a coleta das informações desejadas.
### O comando faturamento_mes[-1] é um slice que por ser negativo, pega o último valor da lista ordenada, ou seja, o maior valor numérico.
### O seguinte laço for percorre toda a lista faturamento_mes adicionando seus valores em faturamento_total, 
    além disso é verificado o primeiro valor superior a zero na lista e então carregado em menor_valor_faturamento.
    Uma verificação de alteração (menor_valor_faturamento == 0) é utilizada para carregarmos apenas o primeiro valor maior que 0.
### O faturamento médio é calculando dividindo o faturamento total pela quantidade de dados dentro da lista len(faturamento_mes)
### O último laço for verifica toda a lista para somar a quantidade de vezes em quem um faturamento superou o faturamento médio.
### Por fim as informações são printadas.


